---

  - set_fact:
       neutron_db_name: neutron

  - name: Create a database for neutron
    shell: mysql -u root -p{{mysql_db_pass}} -e 'CREATE DATABASE {{neutron_db_name}};'

  - name: Set the required privilages to neutron database 
    template: src=../templates/grant_prev.j2 dest=/tmp/grant_prev.sh mode=0777 

  - name: Grant Permission
    shell: ./grant_prev.sh chdir=/tmp/ 

  - name: Create Domain, projects, users and roles
    shell: "{{item.cmd}}"
    with_items:
        - { cmd: 'openstack user create --domain default --password {{neutron.user_password}} neutron' }
        - { cmd: 'openstack role add --project service --user neutron admin' }
        - { cmd: 'openstack service create --name neutron --description "OpenStack Neutron" network' }
        - { cmd: 'openstack endpoint create --region RegionOne network public http://{{hostname_controller}}:9696' }
        - { cmd: 'openstack endpoint create --region RegionOne network internal http://{{hostname_controller}}:9696' }
        - { cmd: 'openstack endpoint create --region RegionOne network admin http://{{hostname_controller}}:9696' }
    environment:
          OS_USERNAME: admin
          OS_PASSWORD: ADMIN_PASS
          OS_PROJECT_NAME: admin
          OS_USER_DOMAIN_NAME: Default
          OS_PROJECT_DOMAIN_NAME: Default
          OS_AUTH_URL: http://{{hostname_controller}}:35357/v3
          OS_IDENTITY_API_VERSION: 3
    
  - name: Install all the network packages
    apt: name={{ item }} state=present 
    with_items:
        - neutron-server
        - neutron-plugin-ml2
        - neutron-linuxbridge-agent 
        - neutron-l3-agent 
        - neutron-dhcp-agent
        - neutron-metadata-agent

  - name: Update /etc/neutron/neutron.conf
    ini_file: dest=/etc/neutron/neutron.conf
               section=database
               option=connection
               value="mysql+pymysql://neutron:{{neutron.db_password}}@{{hostname_controller}}/neutron"
               
  - ini_file: dest=/etc/neutron/neutron.conf
               section=keystone_authtoken
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "auth_uri", val: "http://{{hostname_controller}}:5000" }
        - { opt: "auth_url", val: "http://{{hostname_controller}}:35357" }
        - { opt: "memcached_servers", val: "{{hostname_controller}}:11211" }
        - { opt: "auth_type", val: "password" }
        - { opt: "project_domain_name", val: "default" }
        - { opt: "user_domain_name", val: "default" }
        - { opt: "project_name", val: "service" }
        - { opt: "username", val: "neutron" }
        - { opt: "password", val: "{{neutron.db_password}}" }

  - ini_file: dest=/etc/neutron/neutron.conf
               section=DEFAULT
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "core_plugin", val: "ml2" }
        - { opt: "service_plugins", val: "router" }
        - { opt: "allow_overlapping_ips", val: "true" }
        - { opt: "transport_url", val: "rabbit://openstack:{{rabbit_pass}}@{{hostname_controller}}" }
        - { opt: "auth_strategy", val: "keystone" }
        - { opt: "notify_nova_on_port_status_changes", val: "true" }
        - { opt: "notify_nova_on_port_data_changes", val: "true" }
               
  - ini_file: dest=/etc/neutron/neutron.conf
               section=nova
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "auth_url", val: "http://{{hostname_controller}}:35357" }
        - { opt: "auth_type", val: "password" }
        - { opt: "project_domain_name", val: "default" }
        - { opt: "user_domain_name", val: "default" }
        - { opt: "region_name", val: "RegionOne" }
        - { opt: "project_name", val: "service" }
        - { opt: "username", val: "nova" }
        - { opt: "password", val: "{{nova.password}}" }
               
  - ini_file: dest=/etc/neutron/plugins/ml2/ml2_conf.ini
               section=ml2
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "type_drivers", val: "flat,vlan,vxlan" }
        - { opt: "tenant_network_types", val: "vxlan" }
        - { opt: "mechanism_drivers", val: "linuxbridge,l2population" }
        - { opt: "extension_drivers", val: "port_security" }

  - ini_file: dest=/etc/neutron/plugins/ml2/ml2_conf.ini
               section=ml2_type_flat
               option=flat_networks
               value=provider

  - ini_file: dest=/etc/neutron/plugins/ml2/ml2_conf.ini
               section=ml2_type_flat
               option=vni_ranges
               value="1:1000"

  - ini_file: dest=/etc/neutron/plugins/ml2/ml2_conf.ini
               section=securitygroup
               option=enable_ipset 
               value="true"
  
  - ini_file: dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini
               section=linux_bridge
               option=physical_interface_mappings
               value="provider:{{neutron.provider_interface_name}}"
               
  - ini_file: dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini
               section=vxlan
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "enable_vxlan", val: "true" }
        - { opt: "local_ip", val: "{{neutron.overlay_interface_ip}}" }
        - { opt: "l2_population", val: "true" }
               
  - ini_file: dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini
               section=securitygroup
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "enable_security_group", val: "true" }
        - { opt: "firewall_driver", val: "neutron.agent.linux.iptables_firewall.IptablesFirewallDriver" }

  - ini_file: dest=/etc/neutron/l3_agent.ini
               section=DEFAULT
               option=interface_driver
               value=linuxbridge

  - ini_file: dest=/etc/neutron/dhcp_agent.ini
               section=DEFAULT
               option={{item.opt}}
               value={{item.val}}
    with_items:
        - { opt: "interface_driver", val: "linuxbridge" }
        - { opt: "dhcp_driver", val: "neutron.agent.linux.dhcp.Dnsmasq" }
        - { opt: "enable_isolated_metadata", val: "true" }
  
